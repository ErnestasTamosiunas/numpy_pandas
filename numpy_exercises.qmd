---
title: Numpy exercises
format: html
---
## Task 1 Create and Inscpect a NumPy Array
* Create a 1D NumPy array containing integers from 1 to 10.
* Print its type, shape, and data type.
```{python}
import numpy as np

first_array = np.arange(1, 11)
print(f"array type {type(first_array)}")
print(f"shape {first_array.shape}")
print(f"data type {first_array.dtype}")
```

## Task 2 Array Indexing and Slicing
* Create an array of numbers from 10 to 100 (step of 10)
* Extract the first three elements and last two elements
```{python}
second_array = np.arange(10, 101, 10)
print("second_array", second_array)
print("first three elements:", second_array[:3])
print("last three elements:", second_array[-2:])
```

## Task 3 Reshaping an Array
* Create an array of numbers from 1 to 9.
* Reshape in into a 3x3 matrix.
```{python}
third_array = np.arange(1, 10).reshape(3,3)
third_array
```

## Task 4 Basic Mathematical Operations
* Create an array [2, 4, 6, 8, 10]
* Multiply each element by 3
```{python}
fourth_array = np.arange(2,11,2) * 3
fourth_array
```

## Task 5 Matrix Operations
* Create two 2x2 matrices
* Perform: Addition and Matrix Multiplication
```{python}
A = np.array([[1, 2], [3, 4]])
B = np.array([[5, 6], [7, 8]])
print("Addition \n", A + B)
print("Multiplication \n", A * B)
```

## Task 6 Generate Random Numbers
* Generate a 4x4 matrix of random integers between 10 and 50.
```{python}
four_by_four_matrix = np.random.randint(10, 51, size=(4,4))
print("rand.int:\n", four_by_four_matrix)
```

## Task 7 Finding Min, Max, Mean, and Standard Deviation
* Create an array of 15 random numbers between 1 and 100
* Find the minimum, maximum, mean and standard deviation.
```{python}
fifth_array = np.random.randint(1, 101, size=(15))
print("Size =>", fifth_array.size)
print("Min =>", np.min(fifth_array))
print("Max =>", np.max(fifth_array))
print("Mean =>", np.mean(fifth_array))
print("Standard deviation =>", np.std(fifth_array))
```

## Task 8 Boolean Masking
* Create an array [5, 12, 17, 24, 29, 36, 42, 55].
* Extract elementas greater than 20.
```{python}
sixth_array = np.array([5, 12, 17, 24, 29, 36, 42, 55])
extracted_numbers = sixth_array[sixth_array > 20]
print("Numbers greater than 20 =>\n", extracted_numbers)
extracted_booleans = sixth_array > 20
print("Boolean if greater than 20 =>\n", extracted_booleans)
```

## Task 9 Normalizing Data 
* Normalize an array (values scaled between 0 and 1)
```{python}
# The normalization formula is a statistics formula that can transform a data set so that all of its variations
# fall between zero and one. This makes it easier to understand, compare and showcase the data
# that have quite a different range sizes.
x_arr = np.array([20, 50, 80, 110, 140])
x_min = np.min(x_arr)
x_max = np.max(x_arr)
normalized = (x_arr - x_min) / (x_max - x_min)
normalized
```
